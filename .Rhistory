weather_models
weather_models %>%
mutate(tidy=map(fit, tidy)) %>%
unnest(tidy) %>%
filter(str_detect(term, "temp|percip")) %>%
arrange(p.value)
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather")
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather"))
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
Chicago_test_onlyr <- Chicago_test %>% select(ridership,weekday)
str(Chicago_test_onlyr)
predicted_r <- predict(lm_fit, Chicago_test_nor)
predicted_r
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
set.seed(123) # For reproducibility
cv_folds <- vfold_cv(Chicago_train, v = 10)
# Linear Model Specification
lm_spec <- linear_reg() %>%
set_engine("lm")
# Random Forest Specification
rf_spec <- rand_forest(trees = 1000) %>%
set_engine("ranger") %>%
set_mode("regression")
# Create workflows
lm_workflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(Chicago_rec)
rf_workflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(Chicago_rec)
# Compare models using cross-validation
keep_pred <- control_resamples(save_pred = TRUE, save_workflow = TRUE)
set.seed(1003)
lm_res <-
lm_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
rf_res <-
rf_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
collect_metrics(lm_res)
collect_metrics(rf_res)
Chicago_rec1 <-
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec1
str(Chicago_train)
Chicago_rec2 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec2
Chicago_rec3 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), num_comp = 1, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), num_comp = 1, prefix = "weather_PC", id = "weather_pca")
Chicago_rec3
Chicago_rec4 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
update_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("weather"), num_comp = 1, prefix = "weather_PC", id = "weather_pca")
Chicago_rec4
Chicago_rec5 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_pca(has_role("station"), num_comp = 1, prefix = "station_PC", id = "station_pca")
Chicago_rec5
Chicago_rec6 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
update_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather")
Chicago_rec6
library(tidymodels)
tidymodels_prefer()
preproc <-
list(model1 = Chicago_rec1,
model2 = Chicago_rec2,
model3 = Chicago_rec3,
model4 = Chicago_rec4,
model5 = Chicago_rec5,
model6 = Chicago_rec6
)
lm_models <- workflow_set(preproc, list(lm = linear_reg()), cross = FALSE)
lm_models
lm_models <-
lm_models %>%
workflow_map("fit_resamples",
# Options to `workflow_map()`:
seed = 1101, verbose = TRUE,
# Options to `fit_resamples()`:
resamples = cv_folds, control = keep_pred)
lm_models
collect_metrics(lm_models) %>%
filter(.metric == "rmse")
library(ggrepel)
autoplot(lm_models, metric = "rsq") +
geom_text_repel(aes(label = wflow_id), nudge_x = 1/8, nudge_y = 1/100) +
theme(legend.position = "none")
rsq_indiv_estimates <-
collect_metrics(lm_models, summarize = FALSE) %>%
filter(.metric == "rsq")
rsq_wider <-
rsq_indiv_estimates %>%
select(wflow_id, .estimate, id) %>%
pivot_wider(id_cols = "id", names_from = "wflow_id", values_from = ".estimate")
rsq_wider
corrr::correlate(rsq_wider %>% select(-id), quiet = TRUE)
rsq_indiv_estimates %>%
mutate(wflow_id = reorder(wflow_id, .estimate)) %>%
ggplot(aes(x = wflow_id, y = .estimate, group = id, color = id)) +
geom_line(alpha = .5, linewidth = 1.25) +
theme(legend.position = "none")
#Chicago <- Chicago %>%
#  mutate(weekend = timeDate::isBizday(timeDate::as.timeDate(date)))
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
Chicago_test_onlyr <- Chicago_test %>% select(ridership,weekday)
str(Chicago_test_onlyr)
predicted_r <- predict(lm_fit, Chicago_test_nor)
predicted_r
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
set.seed(123) # For reproducibility
cv_folds <- vfold_cv(Chicago_train, v = 10)
# Linear Model Specification
lm_spec <- linear_reg() %>%
set_engine("lm")
# Random Forest Specification
rf_spec <- rand_forest(trees = 1000) %>%
set_engine("ranger") %>%
set_mode("regression")
# Create workflows
lm_workflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(Chicago_rec)
rf_workflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(Chicago_rec)
# Compare models using cross-validation
keep_pred <- control_resamples(save_pred = TRUE, save_workflow = TRUE)
set.seed(1003)
lm_res <-
lm_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
rf_res <-
rf_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
collect_metrics(lm_res)
collect_metrics(rf_res)
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
Chicago_test_onlyr <- Chicago_test %>% select(ridership,weekday)
str(Chicago_test_onlyr)
predicted_r <- predict(lm_fit, Chicago_test_nor)
predicted_r
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
set.seed(123) # For reproducibility
cv_folds <- vfold_cv(Chicago_train, v = 10)
# Linear Model Specification
lm_spec <- linear_reg() %>%
set_engine("lm")
# Random Forest Specification
rf_spec <- rand_forest(trees = 1000) %>%
set_engine("ranger") %>%
set_mode("regression")
# Create workflows
lm_workflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(Chicago_rec)
rf_workflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(Chicago_rec)
# Compare models using cross-validation
keep_pred <- control_resamples(save_pred = TRUE, save_workflow = TRUE)
set.seed(1003)
lm_res <-
lm_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
rf_res <-
rf_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
collect_metrics(lm_res)
collect_metrics(rf_res)
install.packages(c("bayestestR", "cli", "data.table", "digest", "distributional", "ggeffects", "ggthemes", "glue", "igraph", "MASS", "Matrix", "parameters", "QuickJSR", "Rcpp", "RcppArmadillo", "rlang", "tidyr", "timechange", "writexl", "xfun", "yardstick"))
install.packages(c("bayestestR", "cli", "data.table", "digest", "distributional", "ggeffects", "ggthemes", "glue", "igraph", "MASS", "Matrix", "parameters", "QuickJSR", "Rcpp", "RcppArmadillo", "rlang", "tidyr", "timechange", "writexl", "xfun", "yardstick"))
#?Chicago
library(tidymodels)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(workflowsets)
library(kableExtra)
library(tidyr)
tidymodels_prefer()
str(Chicago)
stations
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = "blue", col = "blue", alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist
Chicago_week <- Chicago %>%
mutate(dow = as.character(wday(ymd(date), label = T))) %>%
mutate(weekday = as.factor(ifelse(dow %in% c("Sat","Sun"), "Weekend", "Weekday"))) %>%
select(-c(date, dow))
Chicago_week
fig_Chicago_week <-
ggplot(Chicago_week, aes(ridership, fill = weekday, col = weekday)) +
facet_wrap( ~ weekday, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .7, alpha = .5) +
xlab("Ridership (x1000 riders)")
fig_Chicago_week
set.seed(010324)
Chicago_split <- initial_split(Chicago_week, prop = 0.80, strata = ridership)
Chicago_train <- training(Chicago_split)
Chicago_test  <-  testing(Chicago_split)
dim(Chicago_week)
dim(Chicago_train)
dim(Chicago_test)
lm_model <- linear_reg() %>% set_engine("lm")
weather <- list(
temp_min = ridership ~ temp_min + weekday,
temp = ridership ~ temp + weekday,
temp_max = ridership ~ temp_max + weekday,
temp_change = ridership ~ temp_change + weekday,
percip = ridership ~ percip + weekday,
percip_max = ridership ~ percip_max + weekday
)
weather_models <- workflow_set(preproc = weather,
models = list(lm = lm_model))
weather_models
weather_models$info[[1]]
extract_workflow(weather_models, id = "temp_lm")
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
weather_models
weather_models %>%
mutate(tidy=map(fit, tidy)) %>%
unnest(tidy) %>%
filter(str_detect(term, "temp|percip")) %>%
arrange(p.value)
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather")
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather"))
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
Chicago_test_onlyr <- Chicago_test %>% select(ridership,weekday)
str(Chicago_test_onlyr)
predicted_r <- predict(lm_fit, Chicago_test_nor)
predicted_r
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
set.seed(123) # For reproducibility
cv_folds <- vfold_cv(Chicago_train, v = 10)
# Linear Model Specification
lm_spec <- linear_reg() %>%
set_engine("lm")
# Random Forest Specification
rf_spec <- rand_forest(trees = 1000) %>%
set_engine("ranger") %>%
set_mode("regression")
# Create workflows
lm_workflow <-
workflow() %>%
add_model(lm_spec) %>%
add_recipe(Chicago_rec)
rf_workflow <-
workflow() %>%
add_model(rf_spec) %>%
add_recipe(Chicago_rec)
# Compare models using cross-validation
keep_pred <- control_resamples(save_pred = TRUE, save_workflow = TRUE)
set.seed(1003)
lm_res <-
lm_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
rf_res <-
rf_workflow %>%
fit_resamples(resamples = cv_folds, control = keep_pred)
collect_metrics(lm_res)
collect_metrics(rf_res)
Chicago_rec1 <-
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec1
str(Chicago_train)
Chicago_rec2 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec2
Chicago_rec3 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), num_comp = 1, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), num_comp = 1, prefix = "weather_PC", id = "weather_pca")
Chicago_rec3
Chicago_rec4 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
update_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("weather"), num_comp = 1, prefix = "weather_PC", id = "weather_pca")
Chicago_rec4
Chicago_rec5 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
add_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_pca(has_role("station"), num_comp = 1, prefix = "station_PC", id = "station_pca")
Chicago_rec5
Chicago_rec6 <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Blackhawks_Away:Cubs_Home, new_role = "sports_team") %>%
update_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather")
Chicago_rec6
library(tidymodels)
tidymodels_prefer()
preproc <-
list(model1 = Chicago_rec1,
model2 = Chicago_rec2,
model3 = Chicago_rec3,
model4 = Chicago_rec4,
model5 = Chicago_rec5,
model6 = Chicago_rec6
)
lm_models <- workflow_set(preproc, list(lm = linear_reg()), cross = FALSE)
lm_models
lm_models <-
lm_models %>%
workflow_map("fit_resamples",
# Options to `workflow_map()`:
seed = 1101, verbose = TRUE,
# Options to `fit_resamples()`:
resamples = cv_folds, control = keep_pred)
lm_models
collect_metrics(lm_models) %>%
filter(.metric == "rmse")
library(ggrepel)
autoplot(lm_models, metric = "rsq") +
geom_text_repel(aes(label = wflow_id), nudge_x = 1/8, nudge_y = 1/100) +
theme(legend.position = "none")
rsq_indiv_estimates <-
collect_metrics(lm_models, summarize = FALSE) %>%
filter(.metric == "rsq")
rsq_wider <-
rsq_indiv_estimates %>%
select(wflow_id, .estimate, id) %>%
pivot_wider(id_cols = "id", names_from = "wflow_id", values_from = ".estimate")
rsq_wider
corrr::correlate(rsq_wider %>% select(-id), quiet = TRUE)
rsq_indiv_estimates %>%
mutate(wflow_id = reorder(wflow_id, .estimate)) %>%
ggplot(aes(x = wflow_id, y = .estimate, group = id, color = id)) +
geom_line(alpha = .5, linewidth = 1.25) +
theme(legend.position = "none")
#Chicago <- Chicago %>%
#  mutate(weekend = timeDate::isBizday(timeDate::as.timeDate(date)))
