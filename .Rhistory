facet_wrap( ~ pow, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .03, alpha = .5)
ggplot(Chicago_week, aes(ridership, fill = pow, col = pow)) +
facet_wrap( ~ pow, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .7, alpha = .5)
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = ridership, alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = blue, alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = ridership, alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = "blue", alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = "blue", col = "blue", alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist
set.seed(010324)
Chicago_split <- initial_split(Chicago_week, prop = 0.80, strata = ridership)
Chicago_train <- training(Chicago_split)
Chicago_test  <-  testing(Chicago_split)
str(Chicago_train)
str(Chicago_split)
dim(Chicago_train)
dim(Chicago_week)
dim(Chicago_train)
dim(Chicago_test)
library(workflowsets)
library(lubridate)
Chicago_week <- Chicago %>%
mutate(dow = as.character(wday(ymd(date), label = T))) %>%
mutate(weekday = as.factor(ifelse(dow %in% c("Sat","Sun"), "Weekend", "Weekday")))
Chicago_week
fig_4_5 <-
ggplot(Chicago_week, aes(ridership, fill = weekday, col = weekday)) +
facet_wrap( ~ weekday, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .7, alpha = .5) +
xlab("Ridership (x1000 riders)")
set.seed(010324)
Chicago_split <- initial_split(Chicago_week, prop = 0.80, strata = ridership)
Chicago_train <- training(Chicago_split)
Chicago_test  <-  testing(Chicago_split)
dim(Chicago_week)
dim(Chicago_train)
dim(Chicago_test)
library(workflowsets)
weather <- list(
temp_min = ridership ~ temp_min + weekday,
temp = ridership ~ temp + weekday,
temp_max = ridership ~ temp_max + weekday,
temp_change = ridership ~ temp_changed + weekday,
percip = ridership ~ percip + weekday,
percip_max = ridership ~ percip_max + weekday
)
lm_model <- linear_reg() %>% set_engine("lm")
weather_models <- workflow_set(preproc = weather,
models = list(lm = lm_model))
weather_models
weather_models$info[[1]]
extract_workflow(weather_models, id = "coords_lm")
extract_workflow(weather_models, id = "temp_lm")
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
#?Chicago
str(Chicago)
library(modeldata)
data("Chicago")
Chicago
#?Chicago
str(Chicago)
stations
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = "blue", col = "blue", alpha = .5) +
xlab("Ridership (x1000 riders)")
library(tidymodels)
library(lubridate)
library(tidyverse)
library(ggplot2)
str(Chicago)
stations
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = "blue", col = "blue", alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist
Chicago_week <- Chicago %>%
mutate(dow = as.character(wday(ymd(date), label = T))) %>%
mutate(weekday = as.factor(ifelse(dow %in% c("Sat","Sun"), "Weekend", "Weekday")))
Chicago_week
fig_4_5 <-
ggplot(Chicago_week, aes(ridership, fill = weekday, col = weekday)) +
facet_wrap( ~ weekday, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .7, alpha = .5) +
xlab("Ridership (x1000 riders)")
set.seed(010324)
Chicago_split <- initial_split(Chicago_week, prop = 0.80, strata = ridership)
Chicago_train <- training(Chicago_split)
Chicago_test  <-  testing(Chicago_split)
dim(Chicago_week)
dim(Chicago_train)
dim(Chicago_test)
fig_Chicago_week <-
ggplot(Chicago_week, aes(ridership, fill = weekday, col = weekday)) +
facet_wrap( ~ weekday, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .7, alpha = .5) +
xlab("Ridership (x1000 riders)")
fig_Chicago_week
set.seed(010324)
Chicago_split <- initial_split(Chicago_week, prop = 0.80, strata = ridership)
Chicago_train <- training(Chicago_split)
Chicago_test  <-  testing(Chicago_split)
dim(Chicago_week)
dim(Chicago_train)
dim(Chicago_test)
lm_model <- linear_reg() %>% set_engine("lm")
library(workflowsets)
lm_model <- linear_reg() %>% set_engine("lm")
weather <- list(
temp_min = ridership ~ temp_min + weekday,
temp = ridership ~ temp + weekday,
temp_max = ridership ~ temp_max + weekday,
temp_change = ridership ~ temp_changed + weekday,
percip = ridership ~ percip + weekday,
percip_max = ridership ~ percip_max + weekday
)
weather_models <- workflow_set(preproc = weather,
models = list(lm = lm_model))
weather_models
weather_models$info[[1]]
extract_workflow(weather_models, id = "temp_lm")
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
library(purrr)
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
library(dplyr)
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
weather <- list(
temp_min = ridership ~ temp_min + weekday,
temp = ridership ~ temp + weekday,
temp_max = ridership ~ temp_max + weekday,
temp_change = ridership ~ temp_change + weekday,
percip = ridership ~ percip + weekday,
percip_max = ridership ~ percip_max + weekday
)
weather_models <- workflow_set(preproc = weather,
models = list(lm = lm_model))
weather_models
weather_models$info[[1]]
extract_workflow(weather_models, id = "temp_lm")
library(purrr)
library(dplyr)
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
weather_models
weather_models %>%
mutate(tidy=map(fit, tidy))
weather_models %>%
mutate(tidy=map(fit, tidy)) %>%
unnest(tidy)
weather_models %>%
mutate(tidy=map(fit, tidy)) %>%
unnest(tidy) %>%
filter(str_detect(term, "temp|percip"))
weather_models %>%
mutate(tidy=map(fit, tidy)) %>%
unnest(tidy) %>%
filter(str_detect(term, "temp|percip")) %>%
arrange(p.value)
recipe(ridership ~ ., data = chicago_train)
recipe(ridership ~ ., data = Chicago_train)
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather")
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather")
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station"), has_role("weather"))
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station|weather"))
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station|weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather"))
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% arrange(p.value)
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
update_role(Austin:California, new_role = "station") %>%
update_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit) %>% arrange(p.value)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
predict(lm_fit, ames_test %>% slice(1:3))
predict(lm_fit, Chicago_test %>% slice(1:3))
predict(lm_fit, Chicago_test)
str(Chicago_test)
dim(Chicago_test_nor)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
dim(Chicago_test_nor)
str(Chicago_test_nor)
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
predict(lm_fit, Chicago_test_nor)
predicted_r <- predict(lm_fit, Chicago_test_nor)
predicted_r
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
Chicago_test_onlyr <- Chicago_test %>% select(ridership)
str(Chicago_test_onlyr)
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
ggplot(chicago_test_predictions, aes(x = ridership, y = .pred)) +
labs(y = "Predicted ridership", x = "Ridership")
ggplot(chicago_test_predictions, aes(x = ridership, y = .pred)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted ridership", x = "Ridership")
ggplot(chicago_test_predictions, aes(x = ridership, y = .pred)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted ridership", x = "Ridership") +
coord_obs_pred()
Chicago_test_onlyr <- Chicago_test %>% select(ridership,weekday)
str(Chicago_test_onlyr)
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted ridership", x = "Ridership") +
coord_obs_pred()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, se = FALSE, color = "lightblue") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, se = FALSE, color = "green") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, se = FALSE, color = "black") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, se = FALSE, color = "grey") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x) +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, se = FALSE) +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, se = FALSE, color = "lightblue") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "lightblue") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred)) +
geom_point(alpha = 0.5, col = weekday) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x) +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred)) +
geom_point(alpha = 0.5, col = aes(weekday)) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x) +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred)) +
geom_point(alpha = 0.5, col = aes(~weekday)) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x) +
coord_equal()
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
#?Chicago
library(tidymodels)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(workflowsets)
str(Chicago)
stations
y_hist <-
ggplot(Chicago, aes(ridership)) +
geom_histogram(binwidth = .7, fill = "blue", col = "blue", alpha = .5) +
xlab("Ridership (x1000 riders)")
y_hist
Chicago_week <- Chicago %>%
mutate(dow = as.character(wday(ymd(date), label = T))) %>%
mutate(weekday = as.factor(ifelse(dow %in% c("Sat","Sun"), "Weekend", "Weekday")))
Chicago_week
fig_Chicago_week <-
ggplot(Chicago_week, aes(ridership, fill = weekday, col = weekday)) +
facet_wrap( ~ weekday, nrow = 2, scales = "free_y") +
geom_histogram(binwidth = .7, alpha = .5) +
xlab("Ridership (x1000 riders)")
fig_Chicago_week
set.seed(010324)
Chicago_split <- initial_split(Chicago_week, prop = 0.80, strata = ridership)
Chicago_train <- training(Chicago_split)
Chicago_test  <-  testing(Chicago_split)
dim(Chicago_week)
dim(Chicago_train)
dim(Chicago_test)
lm_model <- linear_reg() %>% set_engine("lm")
weather <- list(
temp_min = ridership ~ temp_min + weekday,
temp = ridership ~ temp + weekday,
temp_max = ridership ~ temp_max + weekday,
temp_change = ridership ~ temp_change + weekday,
percip = ridership ~ percip + weekday,
percip_max = ridership ~ percip_max + weekday
)
weather_models <- workflow_set(preproc = weather,
models = list(lm = lm_model))
weather_models
weather_models$info[[1]]
extract_workflow(weather_models, id = "temp_lm")
weather_models <-
weather_models %>%
mutate(fit = map(info, ~ fit(.x$workflow[[1]], Chicago_train)))
weather_models
weather_models %>%
mutate(tidy=map(fit, tidy)) %>%
unnest(tidy) %>%
filter(str_detect(term, "temp|percip")) %>%
arrange(p.value)
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather")
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather"))
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec <-
recipe(ridership ~ ., data = Chicago_train) %>%
add_role(Austin:California, new_role = "station") %>%
add_role(temp_min:weather_storm, new_role = "weather") %>%
step_normalize(has_role("station")) %>%
step_normalize(has_role("weather")) %>%
step_pca(has_role("station"), threshold = .75, prefix = "station_PC", id = "station_pca") %>%
step_pca(has_role("weather"), threshold = .75, prefix = "weather_PC", id = "weather_pca")
Chicago_rec
tidy(Chicago_rec)
lm_wflow <-
workflow() %>%
add_model(lm_model) %>%
add_recipe(Chicago_rec)
lm_fit <- fit(lm_wflow, Chicago_train)
tidy(lm_fit)
tidy(lm_fit) %>% select(term, p.value)
str(Chicago_test)
Chicago_test_nor <- Chicago_test %>% select(-ridership)
str(Chicago_test_nor)
Chicago_test_onlyr <- Chicago_test %>% select(ridership,weekday)
str(Chicago_test_onlyr)
predicted_r <- predict(lm_fit, Chicago_test_nor)
predicted_r
chicago_test_predictions <- bind_cols(predicted_r, Chicago_test_onlyr)
chicago_test_predictions
chicago_test_predictions |>
ggplot(aes(x = ridership, y = .pred, col = weekday)) +
geom_point(alpha = 0.5) +
labs(y = "Predicted Ridership (x1000)", x = "Recorded Ridership (x1000)") +
geom_smooth(method = lm, formula = y ~ x, color = "blue") +
coord_equal()
