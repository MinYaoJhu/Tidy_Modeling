"0","library(rules)"
"0","library(baguette)"
"0",""
"0","linear_reg_spec <- "
"0","   linear_reg(penalty = tune(), mixture = tune()) %>% "
"0","   set_engine(""glmnet"")"
"0",""
"0","nnet_spec <- "
"0","   mlp(hidden_units = tune(), penalty = tune(), epochs = tune()) %>% "
"0","   set_engine(""nnet"", MaxNWts = 2600) %>% "
"0","   set_mode(""regression"")"
"0",""
"0","mars_spec <- "
"0","   mars(prod_degree = tune()) %>%  #<- use GCV to choose terms"
"0","   set_engine(""earth"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","svm_r_spec <- "
"0","   svm_rbf(cost = tune(), rbf_sigma = tune()) %>% "
"0","   set_engine(""kernlab"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","svm_p_spec <- "
"0","   svm_poly(cost = tune(), degree = tune()) %>% "
"0","   set_engine(""kernlab"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","knn_spec <- "
"0","   nearest_neighbor(neighbors = tune(), dist_power = tune(), weight_func = tune()) %>% "
"0","   set_engine(""kknn"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","cart_spec <- "
"0","   decision_tree(cost_complexity = tune(), min_n = tune()) %>% "
"0","   set_engine(""rpart"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","bag_cart_spec <- "
"0","   bag_tree() %>% "
"0","   set_engine(""rpart"", times = 50L) %>% "
"0","   set_mode(""regression"")"
"0",""
"0","rf_spec <- "
"0","   rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %>% "
"0","   set_engine(""ranger"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","xgb_spec <- "
"0","   boost_tree(tree_depth = tune(), learn_rate = tune(), loss_reduction = tune(), "
"0","              min_n = tune(), sample_size = tune(), trees = tune()) %>% "
"0","   set_engine(""xgboost"") %>% "
"0","   set_mode(""regression"")"
"0",""
"0","cubist_spec <- "
"0","   cubist_rules(committees = tune(), neighbors = tune()) %>% "
"0","   set_engine(""Cubist"") "
