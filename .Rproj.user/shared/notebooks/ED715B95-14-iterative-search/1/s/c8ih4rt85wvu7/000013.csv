"0","#| echo = FALSE, "
"0","#| fig.height = 4, "
"0","#| fig.width = 6.25, "
"0","#| out.width = ""80%"","
"0","#| fig.cap = ""Predicted performance distributions for two sampled tuning parameter values"","
"0","#| fig.alt = ""Predicted performance distributions for two sampled tuning parameter values. For one, the distribution is slightly better than the current value with a small spread. The other parameter value is slightly worse but has a very wide spread."""
"0",""
"0","small_pred <- "
"0","  predict(gp, c(0.1, 0.25))$complete_data %>% "
"0","  as_tibble() %>% "
"0","  setNames(c(""x"", "".mean"", "".sd"")) %>% "
"0","  mutate("
"0","    value = c(0.1, 0.25),"
"0","    .sd = sqrt(.sd),"
"0","    max = .mean + 3 * .sd,"
"0","    min = .mean - 3 * .sd"
"0","  )"
"0",""
"0","small_pred <- "
"0","  small_pred %>% "
"0","  bind_cols("
"0","    exp_improve() %>% "
"0","      predict(small_pred, maximize = TRUE, iter = 1, best = max(current_iter$y)) %>% "
"0","      setNames(""exp_imp"")"
"0","  )"
"0",""
"0","get_density <- function(dat) {"
"0","  res <- tibble(x = seq(dat$min, dat$max, length.out = 200)) %>% "
"0","    mutate(density = dnorm(x, dat$.mean, dat$.sd),"
"0","           `Parameter Value` = format(dat$value))"
"0","  res"
"0","}"
"0",""
"0","x_lab <- expression(Predicted ~ italic(R^2) ~ Distribution)"
"0",""
"0","small_pred %>% "
"0","  group_by(value) %>% "
"0","  do(get_density(.)) %>% "
"0","  ungroup() %>% "
"0","  ggplot(aes(x = x, y = density, color = `Parameter Value`, lty = `Parameter Value`)) + "
"0","  geom_line() +"
"0","  geom_vline(xintercept = max(current_iter$y), lty = 3) +  "
"0","  labs(x = x_lab) + "
"0","  scale_color_brewer(palette = ""Set1"")"
