"0","#| echo = FALSE, "
"0","#| message = FALSE, "
"0","#| warning = FALSE,"
"0","#| fig.height = 5, "
"0","#| out.width = ""80%"","
"0","#| fig.cap = ""The racing process for 20 tuning parameters and 10 resamples"","
"0","#| fig.alt = ""An illustration of the racing process for 20 tuning parameters and 10 resamples. The analysis is conducted at the first, third, and last resample. As the number of resamples increases, the confidence intervals show some model configurations that do not have confidence intervals that overlap with zero. These are excluded from subsequent resamples."""
"0",""
"0","full_att <- attributes(mlp_sfd_race)"
"0",""
"0","race_details <- NULL"
"0","for(iter in 1:10) {"
"0","  "
"0","  tmp <- mlp_sfd_race %>% filter(.order <= iter)"
"0","  "
"0","  tmp_att <- full_att"
"0","  tmp_att$row.names <- attr(tmp, ""row.names"")"
"0","  attributes(tmp) <- tmp_att"
"0","  "
"0","  if (nrow(show_best(tmp)) == 1) {"
"0","    break()"
"0","  }"
"0","  race_details <-"
"0","    bind_rows("
"0","      race_details,"
"0","      finetune:::test_parameters_gls(tmp) %>% mutate(iter = iter))"
"0","}"
"0",""
"0","race_details <-"
"0","  race_details %>%"
"0","  mutate("
"0","    lower = ifelse(iter < 3, NA, lower),"
"0","    upper = ifelse(iter < 3, NA, upper),"
"0","    pass = ifelse(iter < 3, TRUE, pass),"
"0","    decision = ifelse(pass, ""retain"", ""discard""),"
"0","    decision = ifelse(pass & estimate == 0, ""best"", decision)"
"0","  )  %>%"
"0","  mutate("
"0","    .config = factor(.config),"
"0","    .config = reorder(.config, estimate),"
"0","    decision = factor(decision, levels = c(""best"", ""retain"", ""discard""))"
"0","  ) "
"0","race_cols <- c(best = ""blue"", retain = ""black"", discard = ""grey"")"
"0",""
"0","iter_three <- race_details %>% dplyr::filter(iter == 3) "
"0",""
"0","iter_three %>% "
"0","  ggplot(aes(x = -estimate, y = .config)) + "
"0","  geom_vline(xintercept = 0, lty = 2, color = ""green"") +"
"0","  geom_point(size = 2, aes(color = decision)) +"
"0","  geom_errorbarh(aes(xmin = -estimate, xmax = -upper, color = decision), height = .3, show.legend = FALSE) + "
"0","  labs(x = ""Loss of ROC AUC"", y = NULL) + "
"0","  scale_colour_manual(values = race_cols)"
