"0","two_class_rec <-"
"0"," recipe(Class ~ ., data = two_class_dat) %>% "
"0"," step_normalize(all_numeric_predictors()) "
"0",""
"0","mlp_mod <- "
"0"," mlp(hidden_units = tune(), epochs = 1000) %>% "
"0"," set_engine(""nnet"") %>%"
"0"," set_mode(""classification"")"
"0",""
"0","mlp_wflow <- "
"0"," workflow() %>% "
"0"," add_recipe(two_class_rec) %>% "
"0"," add_model(mlp_mod)"
"0",""
"0","mlp_res <-"
"0"," tibble("
"0","  hidden_units = 1:20,"
"0","  train = NA_real_,"
"0","  test = NA_real_,"
"0","  model = vector(mode = ""list"", length = 20)"
"0"," )"
"0",""
"0","for(i in 1:nrow(mlp_res)) {"
"0","  set.seed(27)"
"0"," tmp_mod <-"
"0","  mlp_wflow %>% finalize_workflow(mlp_res %>% slice(i) %>% select(hidden_units)) %>%"
"0","  fit(training_set)"
"0"," mlp_res$train[i] <-"
"0","  roc_auc_vec(training_set$Class, predict(tmp_mod, training_set, type = ""prob"")$.pred_Class1)"
"0"," mlp_res$test[i]  <-"
"0","  roc_auc_vec(testing_set$Class, predict(tmp_mod, testing_set, type = ""prob"")$.pred_Class1)"
"0"," mlp_res$model[[i]] <- tmp_mod"
"0","}"
